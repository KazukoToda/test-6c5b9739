{
  "key": "systemAbstraction",
  "value": {
    "designRules": "1. カラーパレット：\n   - プライマリカラー：#2C3E50 (濃紺)\n   - セカンダリカラー：#3498DB (青)\n   - アクセントカラー：#E74C3C (赤)\n   - 背景色：#ECF0F1 (薄灰色)\n   - テキスト色：#333333 (濃灰色)\n\n2. タイポグラフィ：\n   - 見出し：Noto Sans JP Bold\n   - 本文：Noto Sans JP Regular\n   - フォントサイズ：16px基準で段階的に設定\n\n3. レイアウト：\n   - レスポンシブデザインを採用\n   - グリッドシステムを使用し整列を統一\n\n4. UI要素：\n   - ボタン：角丸矩形 影付き\n   - フォーム：シンプルでクリーンなデザイン\n   - アイコン：Material Designアイコンセットを使用\n\n5. データ可視化：\n   - グラフ：シンプルで読みやすいデザイン\n   - カラー：コントラストを考慮し視認性を確保\n\n6. アニメーション：\n   - 控えめで自然な動きを心がける\n   - ローディング時はスケルトンスクリーンを使用\n\n7. アクセシビリティ：\n   - WCAG 2.1のAAレベルに準拠\n   - カラーコントラスト比は4.5:1以上を確保",
    "codingRules": "1. 命名規則：\n   - 変数名：キャメルケース (例: userInput)\n   - 関数名：キャメルケース (例: calculateScore)\n   - クラス名：パスカルケース (例: DiagnosisSession)\n   - 定数：大文字のスネークケース (例: MAX_SCORE)\n\n2. インデント：スペース4つを使用\n\n3. コードの可読性：\n   - 関数は単一責任の原則に従う\n   - コメントは必要最小限に抑え自己説明的なコードを目指す\n   - 複雑なロジックには簡潔な説明コメントを付ける\n\n4. エラーハンドリング：\n   - try-catch文を使用し適切な例外処理を行う\n   - エラーメッセージは具体的で理解しやすいものにする\n   - ログ出力を活用しデバッグを容易にする\n\n5. コードフォーマット：\n   - 1行の長さは80文字以内に収める\n   - 関数の長さは50行以内を目安とする\n\n6. バージョン管理：\n   - Gitを使用し適切なブランチ戦略を採用する\n   - コミットメッセージは明確で具体的に記述する",
    "systemAbstraction": "本システムはDX推進指標自己診断サポートサービスです。AIを活用した対話型自己診断プロセスを提供し企業のDX推進状況を効率的に評価します。主な機能には以下が含まれます：\n\n1. ユーザー管理：アカウント登録とログイン認証\n2. AIによる質問生成と回答分析\n3. 診断結果の可視化と改善提案の自動生成\n4. カスタマイズ可能な診断レポートの作成とダウンロード\n5. 改善計画の登録と進捗管理\n6. 過去の診断結果との比較機能\n7. データセキュリティ：暗号化とアクセス制御\n8. サポート機能：FAQチャットボットとサポートチケット発行\n\nこのシステムにより企業は客観的な評価と具体的な改善策を得られDXの効果的な推進が可能となります。"
  }
}
